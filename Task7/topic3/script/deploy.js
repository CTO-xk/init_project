const { ethers } = require("hardhat");

async function main() {
    console.log("üöÄ ÂºÄÂßãÈÉ®ÁΩ≤Êô∫ËÉΩÂêàÁ∫¶...");

    // Ëé∑ÂèñÈÉ®ÁΩ≤Ë¥¶Êà∑
    const [deployer] = await ethers.getSigners();
    console.log("ÈÉ®ÁΩ≤Ë¥¶Êà∑:", deployer.address);
    console.log("Ë¥¶Êà∑‰ΩôÈ¢ù:", ethers.utils.formatEther(await deployer.getBalance()));

    // ÈÉ®ÁΩ≤ÂéüÂßãÁÆóÊúØÂêàÁ∫¶
    console.log("\nüìù ÈÉ®ÁΩ≤ÂéüÂßãÁÆóÊúØÂêàÁ∫¶...");
    const Arithmetic = await ethers.getContractFactory("Arithmetic");
    const arithmetic = await Arithmetic.deploy();
    await arithmetic.deployed();
    console.log("ÂéüÂßãÁÆóÊúØÂêàÁ∫¶Â∑≤ÈÉ®ÁΩ≤Âà∞:", arithmetic.address);

    // ÈÉ®ÁΩ≤‰ºòÂåñÂêéÁöÑÁÆóÊúØÂêàÁ∫¶
    console.log("\n‚ö° ÈÉ®ÁΩ≤‰ºòÂåñÂêéÁöÑÁÆóÊúØÂêàÁ∫¶...");
    const ArithmeticOptimized = await ethers.getContractFactory("ArithmeticOptimized");
    const arithmeticOptimized = await ArithmeticOptimized.deploy();
    await arithmeticOptimized.deployed();
    console.log("‰ºòÂåñÁÆóÊúØÂêàÁ∫¶Â∑≤ÈÉ®ÁΩ≤Âà∞:", arithmeticOptimized.address);

    // È™åËØÅÂêàÁ∫¶ÂäüËÉΩ
    console.log("\nüîç È™åËØÅÂêàÁ∫¶ÂäüËÉΩ...");
    
    // ÊµãËØïÂéüÂßãÂêàÁ∫¶
    console.log("ÊµãËØïÂéüÂßãÂêàÁ∫¶...");
    const addResult = await arithmetic.add(5, 3);
    console.log("5 + 3 =", addResult.toString());
    
    const subResult = await arithmetic.subtract(10, 4);
    console.log("10 - 4 =", subResult.toString());
    
    const mulResult = await arithmetic.multiply(6, 7);
    console.log("6 * 7 =", mulResult.toString());
    
    const divResult = await arithmetic.divide(20, 5);
    console.log("20 / 5 =", divResult.toString());
    
    const modResult = await arithmetic.modulo(17, 5);
    console.log("17 % 5 =", modResult.toString());

    // ÊµãËØï‰ºòÂåñÂêàÁ∫¶
    console.log("\nÊµãËØï‰ºòÂåñÂêàÁ∫¶...");
    const addResultOpt = await arithmeticOptimized.add(5, 3);
    console.log("5 + 3 =", addResultOpt.toString());
    
    const subResultOpt = await arithmeticOptimized.subtract(10, 4);
    console.log("10 - 4 =", subResultOpt.toString());
    
    const mulResultOpt = await arithmeticOptimized.multiply(6, 7);
    console.log("6 * 7 =", mulResultOpt.toString());
    
    const divResultOpt = await arithmeticOptimized.divide(20, 5);
    console.log("20 / 5 =", divResultOpt.toString());
    
    const modResultOpt = await arithmeticOptimized.modulo(17, 5);
    console.log("17 % 5 =", modResultOpt.toString());

    // ÊµãËØïÊâπÈáèÊìç‰Ωú
    console.log("\nÊµãËØïÊâπÈáèÊìç‰Ωú...");
    const a = [1, 2, 3];
    const b = [4, 5, 6];
    const operationTypes = [
        await arithmeticOptimized.ADD(),
        await arithmeticOptimized.SUBTRACT(),
        await arithmeticOptimized.MULTIPLY()
    ];
    
    const batchResults = await arithmeticOptimized.batchExecute(a, b, operationTypes);
    console.log("ÊâπÈáèÊìç‰ΩúÁªìÊûú:", batchResults.map(r => r.toString()));

    // ÈÉ®ÁΩ≤ÊÄªÁªì
    console.log("\n" + "=".repeat(60));
    console.log("‚úÖ ÂêàÁ∫¶ÈÉ®ÁΩ≤ÂÆåÊàêÔºÅ");
    console.log("=".repeat(60));
    console.log("ÂéüÂßãÁÆóÊúØÂêàÁ∫¶Âú∞ÂùÄ:", arithmetic.address);
    console.log("‰ºòÂåñÁÆóÊúØÂêàÁ∫¶Âú∞ÂùÄ:", arithmeticOptimized.address);
    console.log("ÈÉ®ÁΩ≤Ë¥¶Êà∑:", deployer.address);
    console.log("=".repeat(60));

    // ËøîÂõûÂêàÁ∫¶Âú∞ÂùÄ‰æõÂêéÁª≠‰ΩøÁî®
    return {
        arithmetic: arithmetic.address,
        arithmeticOptimized: arithmeticOptimized.address,
        deployer: deployer.address
    };
}

// Â¶ÇÊûúÁõ¥Êé•ËøêË°åÊ≠§ËÑöÊú¨
if (require.main === module) {
    main()
        .then(() => process.exit(0))
        .catch((error) => {
            console.error("‚ùå ÈÉ®ÁΩ≤Â§±Ë¥•:", error);
            process.exit(1);
        });
}

module.exports = { main };
